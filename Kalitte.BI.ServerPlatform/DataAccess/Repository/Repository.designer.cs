#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kalitte.BI.ServerPlatform.DataAccess.Repository
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TcddPersonel")]
	public partial class RepositoryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertModuleDetail(ModuleDetail instance);
    partial void UpdateModuleDetail(ModuleDetail instance);
    partial void DeleteModuleDetail(ModuleDetail instance);
    partial void InsertDbCommand(DbCommand instance);
    partial void UpdateDbCommand(DbCommand instance);
    partial void DeleteDbCommand(DbCommand instance);
    partial void InsertDashboardTemplate(DashboardTemplate instance);
    partial void UpdateDashboardTemplate(DashboardTemplate instance);
    partial void DeleteDashboardTemplate(DashboardTemplate instance);
    partial void InsertDashboardInstance(DashboardInstance instance);
    partial void UpdateDashboardInstance(DashboardInstance instance);
    partial void DeleteDashboardInstance(DashboardInstance instance);
    partial void InsertModule(Module instance);
    partial void UpdateModule(Module instance);
    partial void DeleteModule(Module instance);
    partial void InsertSystemParameter(SystemParameter instance);
    partial void UpdateSystemParameter(SystemParameter instance);
    partial void DeleteSystemParameter(SystemParameter instance);
    partial void InsertUserReportsBI(UserReportsBI instance);
    partial void UpdateUserReportsBI(UserReportsBI instance);
    partial void DeleteUserReportsBI(UserReportsBI instance);
    #endregion
		
		public RepositoryDataContext() : 
				base(global::Kalitte.BI.ServerPlatform.Properties.Settings.Default.KalitteRepositoryConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RepositoryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RepositoryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RepositoryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RepositoryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ModuleDetail> ModuleDetails
		{
			get
			{
				return this.GetTable<ModuleDetail>();
			}
		}
		
		public System.Data.Linq.Table<DbCommand> DbCommands
		{
			get
			{
				return this.GetTable<DbCommand>();
			}
		}
		
		public System.Data.Linq.Table<DashboardTemplate> DashboardTemplates
		{
			get
			{
				return this.GetTable<DashboardTemplate>();
			}
		}
		
		public System.Data.Linq.Table<DashboardInstance> DashboardInstances
		{
			get
			{
				return this.GetTable<DashboardInstance>();
			}
		}
		
		public System.Data.Linq.Table<Module> Modules
		{
			get
			{
				return this.GetTable<Module>();
			}
		}
		
		public System.Data.Linq.Table<SystemParameter> SystemParameters
		{
			get
			{
				return this.GetTable<SystemParameter>();
			}
		}
		
		public System.Data.Linq.Table<UserReportsBI> UserReportsBIs
		{
			get
			{
				return this.GetTable<UserReportsBI>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModuleDetail")]
	public partial class ModuleDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ModuleID;
		
		private System.Guid _CommandID;
		
		private int _DetailType;
		
		private EntityRef<DbCommand> _DbCommand;
		
		private EntityRef<Module> _Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnModuleIDChanging(System.Guid value);
    partial void OnModuleIDChanged();
    partial void OnCommandIDChanging(System.Guid value);
    partial void OnCommandIDChanged();
    partial void OnDetailTypeChanging(int value);
    partial void OnDetailTypeChanged();
    #endregion
		
		public ModuleDetail()
		{
			this._DbCommand = default(EntityRef<DbCommand>);
			this._Module = default(EntityRef<Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CommandID
		{
			get
			{
				return this._CommandID;
			}
			set
			{
				if ((this._CommandID != value))
				{
					if (this._DbCommand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommandIDChanging(value);
					this.SendPropertyChanging();
					this._CommandID = value;
					this.SendPropertyChanged("CommandID");
					this.OnCommandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailType", DbType="Int NOT NULL")]
		public int DetailType
		{
			get
			{
				return this._DetailType;
			}
			set
			{
				if ((this._DetailType != value))
				{
					this.OnDetailTypeChanging(value);
					this.SendPropertyChanging();
					this._DetailType = value;
					this.SendPropertyChanged("DetailType");
					this.OnDetailTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbCommand_ModuleDetail", Storage="_DbCommand", ThisKey="CommandID", OtherKey="ID", IsForeignKey=true)]
		public DbCommand DbCommand
		{
			get
			{
				return this._DbCommand.Entity;
			}
			set
			{
				DbCommand previousValue = this._DbCommand.Entity;
				if (((previousValue != value) 
							|| (this._DbCommand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DbCommand.Entity = null;
						previousValue.ModuleDetails.Remove(this);
					}
					this._DbCommand.Entity = value;
					if ((value != null))
					{
						value.ModuleDetails.Add(this);
						this._CommandID = value.ID;
					}
					else
					{
						this._CommandID = default(System.Guid);
					}
					this.SendPropertyChanged("DbCommand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_ModuleDetail", Storage="_Module", ThisKey="ModuleID", OtherKey="ID", IsForeignKey=true)]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.ModuleDetails.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.ModuleDetails.Add(this);
						this._ModuleID = value.ID;
					}
					else
					{
						this._ModuleID = default(System.Guid);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbCommand")]
	public partial class DbCommand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Tablename;
		
		private string _CommandName;
		
		private int _CommandType;
		
		private string _ConnectionString;
		
		private EntitySet<ModuleDetail> _ModuleDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTablenameChanging(string value);
    partial void OnTablenameChanged();
    partial void OnCommandNameChanging(string value);
    partial void OnCommandNameChanged();
    partial void OnCommandTypeChanging(int value);
    partial void OnCommandTypeChanged();
    partial void OnConnectionStringChanging(string value);
    partial void OnConnectionStringChanged();
    #endregion
		
		public DbCommand()
		{
			this._ModuleDetails = new EntitySet<ModuleDetail>(new Action<ModuleDetail>(this.attach_ModuleDetails), new Action<ModuleDetail>(this.detach_ModuleDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tablename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tablename
		{
			get
			{
				return this._Tablename;
			}
			set
			{
				if ((this._Tablename != value))
				{
					this.OnTablenameChanging(value);
					this.SendPropertyChanging();
					this._Tablename = value;
					this.SendPropertyChanged("Tablename");
					this.OnTablenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CommandName
		{
			get
			{
				return this._CommandName;
			}
			set
			{
				if ((this._CommandName != value))
				{
					this.OnCommandNameChanging(value);
					this.SendPropertyChanging();
					this._CommandName = value;
					this.SendPropertyChanged("CommandName");
					this.OnCommandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandType", DbType="Int NOT NULL")]
		public int CommandType
		{
			get
			{
				return this._CommandType;
			}
			set
			{
				if ((this._CommandType != value))
				{
					this.OnCommandTypeChanging(value);
					this.SendPropertyChanging();
					this._CommandType = value;
					this.SendPropertyChanged("CommandType");
					this.OnCommandTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionString", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ConnectionString
		{
			get
			{
				return this._ConnectionString;
			}
			set
			{
				if ((this._ConnectionString != value))
				{
					this.OnConnectionStringChanging(value);
					this.SendPropertyChanging();
					this._ConnectionString = value;
					this.SendPropertyChanged("ConnectionString");
					this.OnConnectionStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DbCommand_ModuleDetail", Storage="_ModuleDetails", ThisKey="ID", OtherKey="CommandID")]
		public EntitySet<ModuleDetail> ModuleDetails
		{
			get
			{
				return this._ModuleDetails;
			}
			set
			{
				this._ModuleDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ModuleDetails(ModuleDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbCommand = this;
		}
		
		private void detach_ModuleDetails(ModuleDetail entity)
		{
			this.SendPropertyChanging();
			entity.DbCommand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DashboardTemplate")]
	public partial class DashboardTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _DefaultTitle;
		
		private string _IconPath;
		
		private string _DefaultWidth;
		
		private string _ControlPath;
		
		private EntitySet<DashboardInstance> _DashboardInstances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDefaultTitleChanging(string value);
    partial void OnDefaultTitleChanged();
    partial void OnIconPathChanging(string value);
    partial void OnIconPathChanged();
    partial void OnDefaultWidthChanging(string value);
    partial void OnDefaultWidthChanged();
    partial void OnControlPathChanging(string value);
    partial void OnControlPathChanged();
    #endregion
		
		public DashboardTemplate()
		{
			this._DashboardInstances = new EntitySet<DashboardInstance>(new Action<DashboardInstance>(this.attach_DashboardInstances), new Action<DashboardInstance>(this.detach_DashboardInstances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultTitle", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string DefaultTitle
		{
			get
			{
				return this._DefaultTitle;
			}
			set
			{
				if ((this._DefaultTitle != value))
				{
					this.OnDefaultTitleChanging(value);
					this.SendPropertyChanging();
					this._DefaultTitle = value;
					this.SendPropertyChanged("DefaultTitle");
					this.OnDefaultTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconPath", DbType="NVarChar(150)")]
		public string IconPath
		{
			get
			{
				return this._IconPath;
			}
			set
			{
				if ((this._IconPath != value))
				{
					this.OnIconPathChanging(value);
					this.SendPropertyChanging();
					this._IconPath = value;
					this.SendPropertyChanged("IconPath");
					this.OnIconPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultWidth", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DefaultWidth
		{
			get
			{
				return this._DefaultWidth;
			}
			set
			{
				if ((this._DefaultWidth != value))
				{
					this.OnDefaultWidthChanging(value);
					this.SendPropertyChanging();
					this._DefaultWidth = value;
					this.SendPropertyChanged("DefaultWidth");
					this.OnDefaultWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlPath", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ControlPath
		{
			get
			{
				return this._ControlPath;
			}
			set
			{
				if ((this._ControlPath != value))
				{
					this.OnControlPathChanging(value);
					this.SendPropertyChanging();
					this._ControlPath = value;
					this.SendPropertyChanged("ControlPath");
					this.OnControlPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DashboardTemplate_DashboardInstance", Storage="_DashboardInstances", ThisKey="ID", OtherKey="DashboardTemplateID")]
		public EntitySet<DashboardInstance> DashboardInstances
		{
			get
			{
				return this._DashboardInstances;
			}
			set
			{
				this._DashboardInstances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DashboardInstances(DashboardInstance entity)
		{
			this.SendPropertyChanging();
			entity.DashboardTemplate = this;
		}
		
		private void detach_DashboardInstances(DashboardInstance entity)
		{
			this.SendPropertyChanging();
			entity.DashboardTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DashboardInstance")]
	public partial class DashboardInstance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Username;
		
		private System.DateTime _DateCreated;
		
		private System.Guid _DashboardTemplateID;
		
		private string _Width;
		
		private string _Title;
		
		private System.Nullable<bool> _Shared;
		
		private EntityRef<DashboardTemplate> _DashboardTemplate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDashboardTemplateIDChanging(System.Guid value);
    partial void OnDashboardTemplateIDChanged();
    partial void OnWidthChanging(string value);
    partial void OnWidthChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSharedChanging(System.Nullable<bool> value);
    partial void OnSharedChanged();
    #endregion
		
		public DashboardInstance()
		{
			this._DashboardTemplate = default(EntityRef<DashboardTemplate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardTemplateID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DashboardTemplateID
		{
			get
			{
				return this._DashboardTemplateID;
			}
			set
			{
				if ((this._DashboardTemplateID != value))
				{
					if (this._DashboardTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDashboardTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._DashboardTemplateID = value;
					this.SendPropertyChanged("DashboardTemplateID");
					this.OnDashboardTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shared", DbType="Bit")]
		public System.Nullable<bool> Shared
		{
			get
			{
				return this._Shared;
			}
			set
			{
				if ((this._Shared != value))
				{
					this.OnSharedChanging(value);
					this.SendPropertyChanging();
					this._Shared = value;
					this.SendPropertyChanged("Shared");
					this.OnSharedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DashboardTemplate_DashboardInstance", Storage="_DashboardTemplate", ThisKey="DashboardTemplateID", OtherKey="ID", IsForeignKey=true)]
		public DashboardTemplate DashboardTemplate
		{
			get
			{
				return this._DashboardTemplate.Entity;
			}
			set
			{
				DashboardTemplate previousValue = this._DashboardTemplate.Entity;
				if (((previousValue != value) 
							|| (this._DashboardTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DashboardTemplate.Entity = null;
						previousValue.DashboardInstances.Remove(this);
					}
					this._DashboardTemplate.Entity = value;
					if ((value != null))
					{
						value.DashboardInstances.Add(this);
						this._DashboardTemplateID = value.ID;
					}
					else
					{
						this._DashboardTemplateID = default(System.Guid);
					}
					this.SendPropertyChanged("DashboardTemplate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Module")]
	public partial class Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _ModuleName;
		
		private string _Description;
		
		private string _ActivatorInfo;
		
		private string _GroupName;
		
		private int _ImageIndex;
		
		private EntitySet<ModuleDetail> _ModuleDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnModuleNameChanging(string value);
    partial void OnModuleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActivatorInfoChanging(string value);
    partial void OnActivatorInfoChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnImageIndexChanging(int value);
    partial void OnImageIndexChanged();
    #endregion
		
		public Module()
		{
			this._ModuleDetails = new EntitySet<ModuleDetail>(new Action<ModuleDetail>(this.attach_ModuleDetails), new Action<ModuleDetail>(this.detach_ModuleDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ModuleName
		{
			get
			{
				return this._ModuleName;
			}
			set
			{
				if ((this._ModuleName != value))
				{
					this.OnModuleNameChanging(value);
					this.SendPropertyChanging();
					this._ModuleName = value;
					this.SendPropertyChanged("ModuleName");
					this.OnModuleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivatorInfo", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ActivatorInfo
		{
			get
			{
				return this._ActivatorInfo;
			}
			set
			{
				if ((this._ActivatorInfo != value))
				{
					this.OnActivatorInfoChanging(value);
					this.SendPropertyChanging();
					this._ActivatorInfo = value;
					this.SendPropertyChanged("ActivatorInfo");
					this.OnActivatorInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(100)", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageIndex", DbType="Int")]
		public int ImageIndex
		{
			get
			{
				return this._ImageIndex;
			}
			set
			{
				if ((this._ImageIndex != value))
				{
					this.OnImageIndexChanging(value);
					this.SendPropertyChanging();
					this._ImageIndex = value;
					this.SendPropertyChanged("ImageIndex");
					this.OnImageIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_ModuleDetail", Storage="_ModuleDetails", ThisKey="ID", OtherKey="ModuleID")]
		public EntitySet<ModuleDetail> ModuleDetails
		{
			get
			{
				return this._ModuleDetails;
			}
			set
			{
				this._ModuleDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ModuleDetails(ModuleDetail entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_ModuleDetails(ModuleDetail entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemParameter")]
	public partial class SystemParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _PortalUrl;
		
		private string _DecisionSupportBrowserWinUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPortalUrlChanging(string value);
    partial void OnPortalUrlChanged();
    partial void OnDecisionSupportBrowserWinUrlChanging(string value);
    partial void OnDecisionSupportBrowserWinUrlChanged();
    #endregion
		
		public SystemParameter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalUrl", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PortalUrl
		{
			get
			{
				return this._PortalUrl;
			}
			set
			{
				if ((this._PortalUrl != value))
				{
					this.OnPortalUrlChanging(value);
					this.SendPropertyChanging();
					this._PortalUrl = value;
					this.SendPropertyChanged("PortalUrl");
					this.OnPortalUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecisionSupportBrowserWinUrl", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string DecisionSupportBrowserWinUrl
		{
			get
			{
				return this._DecisionSupportBrowserWinUrl;
			}
			set
			{
				if ((this._DecisionSupportBrowserWinUrl != value))
				{
					this.OnDecisionSupportBrowserWinUrlChanging(value);
					this.SendPropertyChanging();
					this._DecisionSupportBrowserWinUrl = value;
					this.SendPropertyChanged("DecisionSupportBrowserWinUrl");
					this.OnDecisionSupportBrowserWinUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserReportsBI")]
	public partial class UserReportsBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _ReportName;
		
		private string _ReportType;
		
		private string _ReportElement;
		
		private System.Data.Linq.Binary _ReportData;
		
		private System.DateTime _CreationDate;
		
		private System.Nullable<bool> _Template;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnReportNameChanging(string value);
    partial void OnReportNameChanged();
    partial void OnReportTypeChanging(string value);
    partial void OnReportTypeChanged();
    partial void OnReportElementChanging(string value);
    partial void OnReportElementChanged();
    partial void OnReportDataChanging(System.Data.Linq.Binary value);
    partial void OnReportDataChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnTemplateChanging(System.Nullable<bool> value);
    partial void OnTemplateChanged();
    #endregion
		
		public UserReportsBI()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this.OnReportNameChanging(value);
					this.SendPropertyChanging();
					this._ReportName = value;
					this.SendPropertyChanged("ReportName");
					this.OnReportNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportType", DbType="NVarChar(30)")]
		public string ReportType
		{
			get
			{
				return this._ReportType;
			}
			set
			{
				if ((this._ReportType != value))
				{
					this.OnReportTypeChanging(value);
					this.SendPropertyChanging();
					this._ReportType = value;
					this.SendPropertyChanged("ReportType");
					this.OnReportTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportElement", DbType="NVarChar(10)")]
		public string ReportElement
		{
			get
			{
				return this._ReportElement;
			}
			set
			{
				if ((this._ReportElement != value))
				{
					this.OnReportElementChanging(value);
					this.SendPropertyChanging();
					this._ReportElement = value;
					this.SendPropertyChanged("ReportElement");
					this.OnReportElementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportData", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ReportData
		{
			get
			{
				return this._ReportData;
			}
			set
			{
				if ((this._ReportData != value))
				{
					this.OnReportDataChanging(value);
					this.SendPropertyChanging();
					this._ReportData = value;
					this.SendPropertyChanged("ReportData");
					this.OnReportDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="Bit")]
		public System.Nullable<bool> Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
